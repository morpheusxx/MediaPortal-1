<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{0362F96A-02E0-4BAC-BCD1-AAA09FB87D6D}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>MPUrlSourceSplitter_Protocol_Udp</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.17134.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(SolutionDir)bin_$(PlatformName)d\$(ProjectName)\</OutDir>
    <IntDir>$(SolutionDir)bin_$(PlatformName)d\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)bin_$(PlatformName)\$(ProjectName)\</OutDir>
    <IntDir>$(SolutionDir)bin_$(PlatformName)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(SolutionDir)baseclasses;..\MPUrlSourceSplitter_libcurl\include;..\MPUrlSourceSplitter_libcurl\include\curl;..\MPUrlSourceSplitter_Interfaces;..\MPUrlSourceSplitter_libmemory;..\MPUrlSourceSplitter_libstrings;..\MPUrlSourceSplitter_libshared;..\MPUrlSourceSplitter_liblogger;..\MPUrlSourceSplitter_libcurlinstance;..\MPUrlSourceSplitter_libsocket;..\MPUrlSourceSplitter_librtp;..\MPUrlSourceSplitter_libcachefile;..\MPUrlSourceSplitter_libplugin;..\MPUrlSourceSplitter_libdumpfile;..\MPUrlSourceSplitter_libibmff;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <ModuleDefinitionFile>mpurlsourcesplitter_protocol_Udp.def</ModuleDefinitionFile>
      <AdditionalLibraryDirectories>$(SolutionDir)bin_$(PlatformName)d\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>wininet.lib;urlmon.lib;Ws2_32.lib;iphlpapi.lib;MPUrlSourceSplitter_libcurl.lib;MPUrlSourceSplitter_libmemory.lib;MPUrlSourceSplitter_libstrings.lib;MPUrlSourceSplitter_liblogger.lib;MPUrlSourceSplitter_libshared.lib;MPUrlSourceSplitter_libcurlinstance.lib;MPUrlSourceSplitter_libsocket.lib;MPUrlSourceSplitter_librtp.lib;MPUrlSourceSplitter_libcachefile.lib;MPUrlSourceSplitter_libplugin.lib;MPUrlSourceSplitter_libdumpfile.lib;MPUrlSourceSplitter_libibmff.lib;Shlwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PreBuildEvent>
      <Command>echo /* &gt; VersionInfo.h
echo     Copyright (C) 2007-2010 Team MediaPortal &gt;&gt; VersionInfo.h
echo     http://www.team-mediaportal.com &gt;&gt; VersionInfo.h
echo. &gt;&gt; VersionInfo.h
echo     This file is part of MediaPortal 2 &gt;&gt; VersionInfo.h
echo. &gt;&gt; VersionInfo.h
echo     MediaPortal 2 is free software: you can redistribute it and/or modify &gt;&gt; VersionInfo.h
echo     it under the terms of the GNU General Public License as published by &gt;&gt; VersionInfo.h
echo     the Free Software Foundation, either version 3 of the License, or &gt;&gt; VersionInfo.h
echo     (at your option) any later version. &gt;&gt; VersionInfo.h
echo. &gt;&gt; VersionInfo.h
echo     MediaPortal 2 is distributed in the hope that it will be useful, &gt;&gt; VersionInfo.h
echo     but WITHOUT ANY WARRANTY; without even the implied warranty of &gt;&gt; VersionInfo.h
echo     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the &gt;&gt; VersionInfo.h
echo     GNU General Public License for more details. &gt;&gt; VersionInfo.h
echo. &gt;&gt; VersionInfo.h
echo     You should have received a copy of the GNU General Public License &gt;&gt; VersionInfo.h
echo     along with MediaPortal 2.  If not, see ^&lt;http://www.gnu.org/licenses/^&gt;. &gt;&gt; VersionInfo.h
echo */ &gt;&gt; VersionInfo.h
echo. &gt;&gt; VersionInfo.h
echo #pragma once &gt;&gt; VersionInfo.h
echo. &gt;&gt; VersionInfo.h
echo #ifndef __VERSIONINFO_MP_URL_SOURCE_SPLITTER_PROTOCOL_UDP_DEFINED &gt;&gt; VersionInfo.h
echo #define __VERSIONINFO_MP_URL_SOURCE_SPLITTER_PROTOCOL_UDP_DEFINED &gt;&gt; VersionInfo.h
echo. &gt;&gt; VersionInfo.h
(echo.|set /p=#define COMMIT_INFO_MP_URL_SOURCE_SPLITTER_PROTOCOL_UDP                                    L^") &gt;&gt; VersionInfo.h
git log -1 --pretty=format:"%%H" -- . &gt;&gt; VersionInfo.h
echo ^" &gt;&gt; VersionInfo.h
(echo.|set /p=#define DATE_INFO_MP_URL_SOURCE_SPLITTER_PROTOCOL_UDP                                      L^") &gt;&gt; VersionInfo.h
git log -1 --pretty=format:"%%ci" -- . &gt;&gt; VersionInfo.h
echo ^" &gt;&gt; VersionInfo.h
echo. &gt;&gt; VersionInfo.h
echo #endif &gt;&gt; VersionInfo.h</Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>copy /Y "$(TargetDir)$(TargetName).lib" "$(SolutionDir)bin_$(PlatformName)d\lib\$(TargetName).lib"
copy /Y "$(TargetDir)$(TargetFileName)" "$(SolutionDir)bin_$(PlatformName)d\$(TargetFileName)"
copy /Y "$(TargetDir)$(TargetName).pdb" "$(SolutionDir)bin_$(PlatformName)d\$(TargetName).pdb"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;NDEBUG;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(SolutionDir)baseclasses;..\MPUrlSourceSplitter_libcurl\include;..\MPUrlSourceSplitter_libcurl\include\curl;..\MPUrlSourceSplitter_Interfaces;..\MPUrlSourceSplitter_libmemory;..\MPUrlSourceSplitter_libstrings;..\MPUrlSourceSplitter_libshared;..\MPUrlSourceSplitter_liblogger;..\MPUrlSourceSplitter_libcurlinstance;..\MPUrlSourceSplitter_libsocket;..\MPUrlSourceSplitter_librtp;..\MPUrlSourceSplitter_libcachefile;..\MPUrlSourceSplitter_libplugin;..\MPUrlSourceSplitter_libdumpfile;..\MPUrlSourceSplitter_libibmff;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <ModuleDefinitionFile>mpurlsourcesplitter_protocol_Udp.def</ModuleDefinitionFile>
      <AdditionalLibraryDirectories>$(SolutionDir)bin_$(PlatformName)\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>wininet.lib;urlmon.lib;Ws2_32.lib;iphlpapi.lib;MPUrlSourceSplitter_libcurl.lib;MPUrlSourceSplitter_libmemory.lib;MPUrlSourceSplitter_libstrings.lib;MPUrlSourceSplitter_liblogger.lib;MPUrlSourceSplitter_libshared.lib;MPUrlSourceSplitter_libcurlinstance.lib;MPUrlSourceSplitter_libsocket.lib;MPUrlSourceSplitter_librtp.lib;MPUrlSourceSplitter_libcachefile.lib;MPUrlSourceSplitter_libplugin.lib;MPUrlSourceSplitter_libdumpfile.lib;MPUrlSourceSplitter_libibmff.lib;Shlwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PreBuildEvent>
      <Command>echo /* &gt; VersionInfo.h
echo     Copyright (C) 2007-2010 Team MediaPortal &gt;&gt; VersionInfo.h
echo     http://www.team-mediaportal.com &gt;&gt; VersionInfo.h
echo. &gt;&gt; VersionInfo.h
echo     This file is part of MediaPortal 2 &gt;&gt; VersionInfo.h
echo. &gt;&gt; VersionInfo.h
echo     MediaPortal 2 is free software: you can redistribute it and/or modify &gt;&gt; VersionInfo.h
echo     it under the terms of the GNU General Public License as published by &gt;&gt; VersionInfo.h
echo     the Free Software Foundation, either version 3 of the License, or &gt;&gt; VersionInfo.h
echo     (at your option) any later version. &gt;&gt; VersionInfo.h
echo. &gt;&gt; VersionInfo.h
echo     MediaPortal 2 is distributed in the hope that it will be useful, &gt;&gt; VersionInfo.h
echo     but WITHOUT ANY WARRANTY; without even the implied warranty of &gt;&gt; VersionInfo.h
echo     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the &gt;&gt; VersionInfo.h
echo     GNU General Public License for more details. &gt;&gt; VersionInfo.h
echo. &gt;&gt; VersionInfo.h
echo     You should have received a copy of the GNU General Public License &gt;&gt; VersionInfo.h
echo     along with MediaPortal 2.  If not, see ^&lt;http://www.gnu.org/licenses/^&gt;. &gt;&gt; VersionInfo.h
echo */ &gt;&gt; VersionInfo.h
echo. &gt;&gt; VersionInfo.h
echo #pragma once &gt;&gt; VersionInfo.h
echo. &gt;&gt; VersionInfo.h
echo #ifndef __VERSIONINFO_MP_URL_SOURCE_SPLITTER_PROTOCOL_UDP_DEFINED &gt;&gt; VersionInfo.h
echo #define __VERSIONINFO_MP_URL_SOURCE_SPLITTER_PROTOCOL_UDP_DEFINED &gt;&gt; VersionInfo.h
echo. &gt;&gt; VersionInfo.h
(echo.|set /p=#define COMMIT_INFO_MP_URL_SOURCE_SPLITTER_PROTOCOL_UDP                                    L^") &gt;&gt; VersionInfo.h
git log -1 --pretty=format:"%%H" -- . &gt;&gt; VersionInfo.h
echo ^" &gt;&gt; VersionInfo.h
(echo.|set /p=#define DATE_INFO_MP_URL_SOURCE_SPLITTER_PROTOCOL_UDP                                      L^") &gt;&gt; VersionInfo.h
git log -1 --pretty=format:"%%ci" -- . &gt;&gt; VersionInfo.h
echo ^" &gt;&gt; VersionInfo.h
echo. &gt;&gt; VersionInfo.h
echo #endif &gt;&gt; VersionInfo.h</Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>copy /Y "$(TargetDir)$(TargetName).lib" "$(SolutionDir)bin_$(PlatformName)\lib\$(TargetName).lib"
copy /Y "$(TargetDir)$(TargetFileName)" "$(SolutionDir)bin_$(PlatformName)\$(TargetFileName)"
copy /Y "$(TargetDir)$(TargetName).pdb" "$(SolutionDir)bin_$(PlatformName)\$(TargetName).pdb"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="MPUrlSourceSplitter_Protocol_Udp.h" />
    <ClInclude Include="MPUrlSourceSplitter_Protocol_Udp_Parameters.h" />
    <ClInclude Include="stdafx.h" />
    <ClInclude Include="targetver.h" />
    <ClInclude Include="UdpCurlInstance.h" />
    <ClInclude Include="UdpDownloadRequest.h" />
    <ClInclude Include="UdpDownloadResponse.h" />
    <ClInclude Include="UdpDumpBox.h" />
    <ClInclude Include="UdpStreamFragment.h" />
    <ClInclude Include="UdpStreamFragmentCollection.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="dllmain.cpp">
      <CompileAsManaged Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</CompileAsManaged>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
      </PrecompiledHeader>
      <CompileAsManaged Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</CompileAsManaged>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
      </PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="MPUrlSourceSplitter_Protocol_Udp.cpp" />
    <ClCompile Include="stdafx.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="UdpCurlInstance.cpp" />
    <ClCompile Include="UdpDownloadRequest.cpp" />
    <ClCompile Include="UdpDownloadResponse.cpp" />
    <ClCompile Include="UdpDumpBox.cpp" />
    <ClCompile Include="UdpStreamFragment.cpp" />
    <ClCompile Include="UdpStreamFragmentCollection.cpp" />
  </ItemGroup>
  <ItemGroup>
    <None Include="mpurlsourcesplitter_protocol_Udp.def" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>